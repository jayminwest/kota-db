# Production Dockerfile for KotaDB SaaS API
# Multi-stage build for optimized image size and security

# Build stage - using latest stable Rust
FROM rust:slim AS builder

# Install build dependencies including C++ compiler for esaxx-rs
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Copy benches for dependency resolution
COPY benches ./benches

# Create dummy source files to build dependencies
RUN mkdir -p src/bin && \
    echo "fn main() {}" > src/main.rs && \
    echo "fn main() {}" > src/lib.rs && \
    echo "fn main() {}" > src/bin/kotadb-api-server.rs

# Build dependencies only (this will fail but cache deps)
RUN cargo build --release --features tree-sitter-parsing,git-integration --bin kotadb-api-server || true && \
    rm -rf src

# Copy actual source code
COPY src ./src
# Note: build.rs not needed for this project

# Build the actual application
RUN cargo build --release --features tree-sitter-parsing,git-integration --bin kotadb-api-server

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    git \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN useradd -m -u 1001 -s /bin/bash kotadb

# Create data directory
RUN mkdir -p /data && chown kotadb:kotadb /data

# Copy binary from builder
COPY --from=builder /app/target/release/kotadb-api-server /usr/local/bin/kotadb-api-server

# Copy entrypoint script (must be done as root before USER change)
COPY --chmod=755 scripts/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

# Switch to non-root user
USER kotadb

# Set working directory
WORKDIR /data

# Environment variables
ENV RUST_LOG=info,kotadb=debug \
    KOTADB_DATA_DIR=/data \
    PORT=8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port
EXPOSE 8080

# Start the server directly
CMD ["kotadb-api-server"]