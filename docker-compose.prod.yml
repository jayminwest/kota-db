version: '3.8'

x-kotadb-build: &kotadb-build
  context: .
  dockerfile: Dockerfile.prod

services:
  kotadb-api:
    build: *kotadb-build
    container_name: kotadb-api
    restart: unless-stopped
    ports:
      - "${KOTADB_PORT:-8080}:8080"
    environment:
      - RUST_LOG=${RUST_LOG:-info,kotadb=debug}
      - RUST_BACKTRACE=${RUST_BACKTRACE:-0}
      - PORT=8080
      - KOTADB_DATA_DIR=/app/data
    volumes:
      - ${KOTADB_DATA_DIR_HOST:-./kotadb-data}:/app/data
    command: ["kotadb", "serve", "--port", "8080"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - kotadb

  kotadb-mcp:
    build: *kotadb-build
    container_name: kotadb-mcp
    restart: unless-stopped
    ports:
      - "${MCP_PORT:-8484}:8484"
    environment:
      - RUST_LOG=${MCP_RUST_LOG:-info}
      - RUST_BACKTRACE=1
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8484
      - KOTADB_DATA_DIR=/app/data
    volumes:
      - ${KOTADB_DATA_DIR_HOST:-./kotadb-data}:/app/data
      - ${KOTADB_MCP_CONFIG_HOST:-./docker/mcp/kotadb-mcp.toml}:/app/config/kotadb-mcp.toml:ro
    command: ["kotadb-mcp", "--config", "/app/config/kotadb-mcp.toml", "--data-dir", "/app/data"]
    healthcheck:
      test:
        - CMD-SHELL
        - >
          curl -sS -X POST http://127.0.0.1:8484/mcp \
            -H "Accept: application/json, text/event-stream" \
            -H "Content-Type: application/json" \
            -H "MCP-Protocol-Version: 2025-06-18" \
            -d '{"jsonrpc":"2.0","id":1,"method":"initialize","params":{}}' \
            >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - kotadb

  redis:
    image: redis:7-alpine
    container_name: kotadb-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - kotadb
    profiles:
      - mcp

  quickstart-server:
    image: ghcr.io/jayminwest/kota-db:latest
    container_name: kotadb-quickstart
    restart: unless-stopped
    ports:
      - "${KOTADB_QUICKSTART_PORT:-18080}:8080"
    environment:
      - RUST_LOG=info
    volumes:
      - ./quickstart-data:/data
      - ./quickstart/demo-data.sh:/docker-entrypoint-initdb.d/demo-data.sh
    command: ["kotadb", "serve", "--port", "8080"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kotadb
    profiles:
      - quickstart

  python-demo:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.11-slim
        WORKDIR /app
        COPY quickstart/python-demo.py .
        RUN pip install kotadb-client requests
        CMD ["python", "python-demo.py"]
    container_name: kotadb-python-demo
    depends_on:
      quickstart-server:
        condition: service_healthy
    environment:
      - KOTADB_URL=http://quickstart-server:8080
    networks:
      - kotadb
    profiles:
      - quickstart

  typescript-demo:
    build:
      context: .
      dockerfile_inline: |
        FROM node:18-slim
        WORKDIR /app
        COPY quickstart/package.json quickstart/typescript-demo.ts ./
        RUN npm install
        RUN npm install -g ts-node
        CMD ["ts-node", "typescript-demo.ts"]
    container_name: kotadb-typescript-demo
    depends_on:
      quickstart-server:
        condition: service_healthy
    environment:
      - KOTADB_URL=http://quickstart-server:8080
    networks:
      - kotadb
    profiles:
      - quickstart

  web-ui:
    build:
      context: .
      dockerfile_inline: |
        FROM nginx:alpine
        COPY quickstart/web-ui/ /usr/share/nginx/html/
        COPY quickstart/nginx.conf /etc/nginx/conf.d/default.conf
    container_name: kotadb-web-ui
    ports:
      - "${KOTADB_UI_PORT:-3000}:80"
    depends_on:
      quickstart-server:
        condition: service_healthy
    networks:
      - kotadb
    profiles:
      - quickstart

volumes:
  redis-data:

networks:
  kotadb:
    driver: bridge
